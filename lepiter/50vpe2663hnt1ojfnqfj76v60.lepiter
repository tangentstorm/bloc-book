{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:13:06.075-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:13:31.599-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "eL3UHu+7DQCM66+FA4beVA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Zatoichi — 03/08/2019 7:37 PM\r\nI have been digging around for the answer to this: How do I make an element always be positioned at some percentage of the width of parent. (Kind of like weight except for position).\r\nI want an element's x location to always be 30% across the horizontal of the parent.\r\nEven if I resize the parent.\r\nMilton Mamani — 03/09/2019 1:58 AM\r\nYou can use events:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:12:37.075-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:12:37.075-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ODwaHe+7DQCM4aYCA4beVA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:12:41.627-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:12:43.577-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kK1fHe+7DQCM4/c9A4beVA=="
				},
				"code" : "| parent child |\nparent := BlElement new \n    geometry: BlRectangle new;\n    size: 100 asPoint;\n    background: (Color green alpha: 0.2);\n    border: (BlBorder paint: Color black width: 2);\n\n    yourself.\nchild := BlElement new\n    geometry: BlRectangle new;\n    background: (Color blue alpha: 0.7);\n    size: 20 asPoint;\n    yourself.\nparent addChild: child.\nparent \n    when: BlElementExtentChangedEvent\n    do: [ | e |\n        e := parent measuredExtent.\n        child relocate: e x * 0.3 @ 0  ].\nparent addAnimation: (BlNumberTransition  new \n    from: 100; \n    to: 300; \n    beInfinite; \n    duration: 2 seconds;\n        onStepDo: [ :t | parent size: t asPoint ]).\nparent."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-07-03T00:13:06.066-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-07-03T00:13:06.066-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "animation example"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "48e6191d-efbb-0d00-8ce0-8fd00386de54"
	}
}