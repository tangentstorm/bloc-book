{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:25:20.23-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:35:21.456-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cA6XSu+7DQCM/kBBA4beVA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Bloc already handles and distributes events to all children in the graphical scene. It also takes care of groups and compositions dor you ðŸ™‚ You can even distinguish elements by their identity (ID). Consider the following example:  -- syrel"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:23:38.264-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:23:41.099-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wC2DRO+7DQCM+IIjA4beVA=="
				},
				"code" : "positions := 100 timesCollect: [ 500 atRandom @ 500 atRandom ].\n\ndots := positions collect: [ :eachPosition |\n    BlElement new\n        geometry: BlCircle new;\n        background: (Color red alpha: 0.6);\n        size: 12@12;\n        relocate: eachPosition - (6@6);\n        when: BlClickEvent do: [ :anEvent |\n            \"we consume click event to prevent it propagating to the parent\"\n            anEvent consumed: true.\n            \"current target is an element to which an event handler is attached\"\n            anEvent currentTarget background: (Color blue alpha: 0.6) ];\n        when: BlMouseEnterEvent do: [ :anEvent |\n            anEvent currentTarget border: (BlBorder paint: Color darkGray width: 2) ];\n        when: BlMouseLeaveEvent do: [ :anEvent |\n            anEvent currentTarget border: BlBorder empty ] ].\n    \ncontainer := BlElement new\n    constraintsDo: [ :c |\n        c horizontal matchParent.\n        c vertical matchParent ];\n    addChildren: dots.\ncontainer"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:23:32.351-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-03T00:23:32.351-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GPQoRO+7DQCM986vA4beVA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-07-03T00:24:54.26-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-07-03T00:24:54.26-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "currentTarget"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "10a22844-efbb-0d00-8cf6-f1110386de54"
	}
}